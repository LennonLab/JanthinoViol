install.packages(c("lattice", "lsmeans"))
violaov <- anova(lm(media$Violacein ~ media$Media * media$Phenotype))
media <- read.csv("MediaViolacein_07212015_WJB.csv", header = T)
attach(media)
# Pairwise scatter plot
pairs(media, pch=20)
# omnibus test
#use anova(object) to test the omnibus hypothesis
#Are main or interaction effects present in the independent variables?
violaov <- anova(lm(media$Violacein ~ media$Media * media$Phenotype))
violaov
setwd("~/Documents/Dropbox/GitHub/JanthinoViol/data")
library(ggplot2)
library(lattice)
library(lsmeans)
library(multcompView)
library(plyr)
# The end goal here is to perform an ANOVA and make a bar plot.
media <- read.csv("MediaViolacein_07212015_WJB.csv", header = T)
attach(media)
# Pairwise scatter plot
pairs(media, pch=20)
# omnibus test
#use anova(object) to test the omnibus hypothesis
#Are main or interaction effects present in the independent variables?
violaov <- anova(lm(media$Violacein ~ media$Media * media$Phenotype))
violaov
violTuk <- TukeyHSD(aov(Violacein ~ Media, data=media))
violTuk
library(ggplot2)
library(lattice)
library(lsmeans)
library(multcompView)
library(plyr)
library(reshape)
epi <- read.csv("EpigeneticsViolacein_07272015_WJB.csv", header = T)
epi.melt <- melt(epi)
qqnorm(epi.melt$value)
wilcox.test(epi$Aza, epi$Control, paired=T)
library(ggplot2)
library(MASS)
library(reshape)
compCFU <- read.csv("./Competition_07212015_WJB.csv", header = T)
compRA <- read.csv("./Competition_07232015_WJB.csv", header = T)
# First we'll look at the total CFU difference before and after compeition,
# Then we'll look at the relative abundances (RA)
# First, add a column summing purple and white CFUs
compCFU$BeforeTotal <- as.numeric(compCFU$PB) + as.numeric(compCFU$WB)
compCFU$AfterTotal <- as.numeric(compCFU$PA) + as.numeric(compCFU$WA)
# Then we'll log-transform
compCFU$BeforeTotalLog <- log(compCFU$BeforeTotal, 10)
compCFU$AfterTotalLog <- log(compCFU$AfterTotal, 10)
compCFU$PBlog <- log(compCFU$PB, 10)
compCFU$WBlog <- log(compCFU$WB, 10)
compCFU$PAlog <- log(compCFU$PA, 10)
compCFU$WAlog <- log(compCFU$WA, 10)
# Run a Wilcoxon signed-rank test
wilcox.test(compCFU$BeforeTotalLog, compCFU$AfterTotalLog, paired=TRUE)
compCFUsubset <- subset(compCFU, select = c(BeforeTotalLog,AfterTotalLog, PBlog, WBlog, PAlog, WAlog))
meltCFU <- melt(compCFUsubset)
ggplot(meltCFU, aes(x=variable, y=value, fill=variable)) + geom_boxplot()
# Not much of a trend
# Let's look at the RA data
meltRA <- melt(compRA)
ggplot(meltRA, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Testing Time") + ylab("Relative Abundance (CFU Purple:White)") + scale_fill_manual(values=c("forestgreen", "royalblue"), name="Sampling Time", labels=c("Before", "After"))
# Not too bad so far, after there's more variation, a larger median
# Let's see how it handles a Wilcoxon signed-rank test
wilcox.test(compRA$BRatio, compRA$ARatio, paired=TRUE)
qs <- read.csv("QSViolacein_07212015_WJB.csv", header = T)
qs.melt <- melt(qs)
# so two treatments, we can do a Wilcoxon rank sum test, since the data is unpaired
wilcox.test(value ~ variable, data=qs.melt)
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + xlab("Experimental Groups") + ylab("Violacein Units")+ scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("White without Supernatant", "White with Supernatant"))  + geom_blank()
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(plyr)
library(Rmisc)
Viol1day <- read.csv("StarvationViolacein_OneDay_07212015_WJB.csv", header = T)
Viol10day <- read.csv("StarvationViolacein_TenDay_07212015_WJB.csv", header = T)
ViolInf <- read.csv("StarvationViolacein_Infinite_07272015_WJB.csv", header = T)
# So first we take subsets of the data that we're interested in
Viol1Sub <- Viol1day[13:15,]
Viol10Sub <- Viol10day[13:15,]
# Then we combine the data
ViolMerge <- rbind(Viol1Sub, Viol10Sub, ViolInf)
Names <- c("1","1","1","10","10", "10", "Inf", "Inf", "Inf")
ViolMerge$Day <- NULL
ViolMerge$labels <- Names
# Now melt and merge
ViolMelt <- melt(ViolMerge)
ViolMelt$Variables <- do.call(paste, c(ViolMelt[c("variable", "labels")], sep = ""))
# Now plot
ggplot(ViolMelt, aes(x=Variables, y=value, fill=variable)) +
geom_boxplot() + xlab("Variables") + ylab("Violacein Units") + scale_fill_manual(values=c("darkorchid4", "white"), name="Starting Phenotype", labels=c("Purple", "White"))
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(plyr)
library(Rmisc)
# load data
CFU1count <-  read.csv("StarvationColony_OneDay_07222015_WJB.csv", header = T)
CFU10count <- read.csv("StarvationColony_TenDay_07222015_WJB.csv", header = T)
CFU1dayRA <- read.csv("StarvationColony_OneDay_07232015_WJB.csv", header = T)
CFU10dayRA <- read.csv("StarvationColony_TenDay_07232015_WJB.csv", header = T)
Viol1day <- read.csv("StarvationViolacein_OneDay_07212015_WJB.csv", header = T)
Viol10day <- read.csv("StarvationViolacein_TenDay_07212015_WJB.csv", header = T)
# Sum the purple and white CFU counts for 1 and 10 day lines
CFU1count$Total <- as.numeric(CFU1count$Purple) + as.numeric(CFU1count$White)
CFU10count$Total <- as.numeric(CFU10count$Purple) + as.numeric(CFU10count$White)
# These data sets are pretty much the same, 10 day and 1 day lines are just different treatments
# So we can just add a column designating whether a row is from a 1 or 10 day line, and merge them
CFU1count$Transfer <- rep(1,nrow(CFU1count))
CFU10count$Transfer <- rep(10,nrow(CFU10count))
# Now merge on the columns "Treatment"
CFUcountMerge <- rbind(CFU1count, CFU10count)
CFUcountMergesubset <- subset(CFUcountMerge, select = -c(Purple,White) )
CFUcountMergesubset$Variables <- do.call(paste, c(CFUcountMergesubset[c("Name", "Transfer")], sep = ""))
# Let's also do a log-transform
CFUcountMergesubset$Total <- log(CFUcountMergesubset$Total, 10)
# Now let's do the same thing for everything else
CFU1dayRA$Transfer <- rep(1,nrow(CFU1dayRA))
CFU10dayRA$Transfer <- rep(10,nrow(CFU10dayRA))
CFURAmerge <- rbind(CFU1dayRA, CFU10dayRA)
CFURAmerge$Variables <- do.call(paste, c(CFURAmerge[c("Name", "Transfer")], sep = ""))
# We need to first reshape the violacein datasets before we can merge them
Viol1melt <- melt(Viol1day, id.vars = "Day")
Viol10melt <- melt(Viol10day, id.vars = "Day")
Viol1melt$Transfer <- rep(1,nrow(Viol1melt))
Viol10melt$Transfer <- rep(10,nrow(Viol10melt))
ViolMerge <- rbind(Viol1melt, Viol10melt)
ViolMerge$Variables <- do.call(paste, c(ViolMerge[c("variable", "Transfer")], sep = ""))
# Mean and standard error
CFUcountSE <- summarySE(CFUcountMergesubset, measurevar="Total", groupvars=c("Day", "Variables"),
conf.interval = 0.95, .drop = TRUE)
CFUraSE <- summarySE(CFURAmerge, measurevar="Ratio", groupvars=c("Day", "Variables"),
conf.interval = 0.95, .drop = TRUE)
# Now get the mean and standard error fot violacein extraction
# for each phenotype
ViolSE <- summarySE(ViolMerge, measurevar="value", groupvars=c("Day", "Variables"),
conf.interval = 0.95, .drop = TRUE)
# Now let's plot violacein concentration and CFU counts through time
# First up, plot CFU concentration
ggplot(CFUcountSE, aes(x=Day, y=Total, colour=Variables)) +
geom_errorbar(aes(ymin=Total-se, ymax=Total+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("CFUs/mL")
# Now the relative abundance
ggplot(CFUraSE, aes(x=Day, y=Ratio, colour=Variables)) +
geom_errorbar(aes(ymin=Ratio-se, ymax=Ratio+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("Ratio (CFU Purple:White)")
# Violacein concentration
ggplot(ViolSE, aes(x=Day, y=value, colour=Variables)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("Violacein Units")
