install.packages(c("lattice", "lsmeans"))
setwd("~/Documents/Dropbox/GitHub/JanthinoViol/data")
library(ggplot2)
library(lattice)
library(lsmeans)
library(multcompView)
library(plyr)
epi <- read.csv("EpigeneticsViolacein_07272015_WJB.csv", header = T)
View(epi)
View(epi)
epi
melt(epi)
install.packages("multcompView")
install.packages("reshape")
install.packages("reshape")
rm(list=ls())
library(ggplot2)
library(lattice)
library(lsmeans)
library(multcompView)
library(plyr)
epi <- read.csv("EpigeneticsViolacein_07272015_WJB.csv", header = T)
epi.melt <- melt(epi)
qqnorm(epi.melt$value)
wilcox.test(epi$Aza, epi$Control, paired=T)
# So there isn't a significant difference and we can tell by just looking
# at the data there's something not right with it.
ggplot(epi.melt, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_jitter()
# We  have a really wide variance, so let's see what happens if
# we log-transform the data
epi$AzaLog <- log(epi$Aza, 10)
epi$ControlLog <- log(epi$Control, 10)
wilcox.test(epi$AzaLog, epi$ControlLog, paired=T)
# Still not significant, but the graph looks better
meltepiLog <- melt(subset(epi, select = c(AzaLog,ControlLog)))
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_jitter()
library(reshape)
epi <- read.csv("EpigeneticsViolacein_07272015_WJB.csv", header = T)
epi.melt <- melt(epi)
qqnorm(epi.melt$value)
wilcox.test(epi$Aza, epi$Control, paired=T)
ggplot(epi.melt, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_jitter()
# We  have a really wide variance, so let's see what happens if
# we log-transform the data
epi$AzaLog <- log(epi$Aza, 10)
epi$ControlLog <- log(epi$Control, 10)
wilcox.test(epi$AzaLog, epi$ControlLog, paired=T)
# Still not significant, but the graph looks better
meltepiLog <- melt(subset(epi, select = c(AzaLog,ControlLog)))
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_jitter()
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank()
ggplot(meltepiLog, aes(x=Treatment, y=Violacein Units, fill=variable)) +
geom_boxplot() +
geom_blank()
ggplot(meltepiLog, aes("x=Treatment", "y=Violacein Units", fill=variable)) +
ggplot(meltepiLog, aes("x=Treatment", "y=Violacein Units", fill=variable)) +
geom_boxplot() +
geom_blank()
ggplot(meltepiLog, aes(x=Treatment, y=Violacein, fill=variable)) +
geom_boxplot() +
geom_blank()
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank()
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Treatment") + ylab("Violacein Units")
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Treatment") + ylab("Violacein Units") + scale_fill_manual(labels=c("Azacytidine", "Control"))
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Treatment") + ylab("Violacein Units") + scale_fill_manual(values=c("AzaLog", "ControlLog"), labels=c("Azacytidine", "Control"))
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Treatment") + ylab("Violacein Units") + scale_fill_manual(values=c("darkorchid4", "white"), labels=c("Azacytidine", "Control"))
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Treatment") + ylab("Violacein Units") + scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("Azacytidine", "Control"))
qs <- read.csv("QSViolacein_07212015_WJB.csv", header = T)
qs.melt <- melt(qs)
# so two treatments, we can do a Wilcoxon rank sum test, since the data is unpaired
wilcox.test(value ~ variable, data=qs.melt)
# Plot it
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot()
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + geom_blank()
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + geom_blank())
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + geom_blank() + scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("White without Supernatant", "White with Supernatant"))
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + geom_blank() + xlab("Experimental Groups") + ylab("Violacein Units")+ scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("White without Supernatant", "White with Supernatant"))
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + xlab("Experimental Groups") + ylab("Violacein Units")+ scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("White without Supernatant", "White with Supernatant") + geom_blank())
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + xlab("Experimental Groups") + ylab("Violacein Units")+ scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("White without Supernatant", "White with Supernatant"))  + geom_blank()
install.packages("reshape2")
compCFU <- read.csv("./Competition_07212015_WJB.csv", header = T)
compRA <- read.csv("./Competition_07232015_WJB.csv", header = T)
# First we'll look at the total CFU difference before and after compeition,
# Then we'll look at the relative abundances (RA)
# First, add a column summing purple and white CFUs
compCFU$BeforeTotal <- as.numeric(compCFU$PB) + as.numeric(compCFU$WB)
compCFU$AfterTotal <- as.numeric(compCFU$PA) + as.numeric(compCFU$WA)
# Then we'll log-transform
compCFU$BeforeTotalLog <- log(compCFU$BeforeTotal, 10)
compCFU$AfterTotalLog <- log(compCFU$AfterTotal, 10)
compCFU$PBlog <- log(compCFU$PB, 10)
compCFU$WBlog <- log(compCFU$WB, 10)
compCFU$PAlog <- log(compCFU$PA, 10)
compCFU$WAlog <- log(compCFU$WA, 10)
# Run a Wilcoxon signed-rank test
wilcox.test(compCFU$BeforeTotalLog, compCFU$AfterTotalLog, paired=TRUE)
# Not significant
# Plot it
compCFUsubset <- subset(compCFU, select = c(BeforeTotalLog,AfterTotalLog, PBlog, WBlog, PAlog, WAlog))
meltCFU <- melt(compCFUsubset)
ggplot(meltCFU, aes(x=variable, y=value, fill=variable)) + geom_boxplot()
# Not much of a trend
# Let's look at the RA data
meltRA <- melt(compRA)
ggplot(meltRA, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_jitter()
# Not too bad so far, after there's more variation, a larger median
# Let's see how it handles a Wilcoxon signed-rank test
wilcox.test(compRA$BRatio, compRA$ARatio, paired=TRUE)
# Not significant, but under the assumptions of the test
# But, this is still a large increase.
ggplot(meltRA, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank()
ggplot(meltRA, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Testing Time") + ylab("Relative Abundance (CFU Purple:White)") + scale_fill_manual(values=c("forestgreen", "royalblue"))
ggplot(meltRA, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Testing Time") + ylab("Relative Abundance (CFU Purple:White)") + scale_fill_manual(values=c("forestgreen", "royalblue"), name="Sampling Time", labels=c("Before", "After"))
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(plyr)
library(Rmisc)
Viol1day <- read.csv("StarvationViolacein_OneDay_07212015_WJB.csv", header = T)
Viol10day <- read.csv("StarvationViolacein_TenDay_07212015_WJB.csv", header = T)
ViolInf <- read.csv("StarvationViolacein_Infinite_07272015_WJB.csv", header = T)
# So first we take subsets of the data that we're interested in
Viol1Sub <- Viol1day[13:15,]
Viol10Sub <- Viol10day[13:15,]
# Then we combine the data
ViolMerge <- rbind(Viol1Sub, Viol10Sub, ViolInf)
Names <- c("1","1","1","10","10", "10", "Inf", "Inf", "Inf")
ViolMerge$Day <- NULL
ViolMerge$labels <- Names
# Now melt and merge
ViolMelt <- melt(ViolMerge)
ViolMelt$Variables <- do.call(paste, c(ViolMelt[c("variable", "labels")], sep = ""))
# Now plot
ggplot(ViolMelt, aes(x=Variables, y=value, fill=variable)) +
geom_boxplot()
ggplot(ViolMelt, aes(x=Variables, y=value, fill=variable)) +
geom_boxplot() + xlab("Variables") + ylab("Violacein Units") + scale_fill_manual(values=c("darkorchid4", "white"), name="Starting Phenotype", labels=c("Purple", "White"))
media <- read.csv("MediaViolacein_07212015_WJB.csv", header = T)
attach(media)
# Pairwise scatter plot
pairs(media, pch=20)
# omnibus test
#use anova(object) to test the omnibus hypothesis
#Are main or interaction effects present in the independent variables?
violaov <- anova(lm(media$Violacein ~ media$Media * media$Phenotype))
violaov
# So there's a significant omnibus interaction for media,
# but not for the interaction of media and phenotypes
# so we should focus on the main effects, in this case media
# And we can use Tukey's test to see which media types are different
violTuk <- TukeyHSD(aov(Violacein ~ Media, data=media))
violTuk
# So, the comparison of LBYW-LBW, LBYW-LBY, and LBYW-LB yield significant results
# So the issue now is what to do when only the main effect is significant for the
# Omnibus test, but not the interaction?
# Well we know WHAT media types are significant, so a bar plot with an asterisk
# indicating what types are significant should be enough.
# In the meantime we can make a boxplot
# Let's make 2, the first will be what we would show if phenotype was significant
# First, get our data into long form by merging the columns "phenotype"
# and "Media"
media$Variables <- do.call(paste, c(media[c("Media", "Phenotype")], sep = ""))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot()
# This is really interesting, the violacein concentration does not really vary by phenotype
#
# Now we can just do it based on media type
mediaSubset <- melt(subset(media, select = c(Media, Violacein)))
ggplot(mediaSubset, aes(x=Media, y=value, fill=Media)) +
geom_boxplot()
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank()
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values=c("default"), name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values=ggplotColors, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values=ggplotColours, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values=colors, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values=colors, drop=FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = colors, drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = cols, drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = colors(distinct = FALSE), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = colors(distinct = TRUE), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = colors(), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = ggplotcolors(), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
media.palette <- scale_fill_hue()
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = media.palette, drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("red", "orange", "green", "blue", "yellow", "black", "violet", "brown"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
media.palette <- scale_colour_hue()
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = media.palette, drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = colors, drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("red", "orange", "green", "blue", "yellow", "black", "violet", "brown"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("red", "orange", "green", "blue", "yellow", "black", "violet", "darkbrown"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("darkorchid4", "white", "darkorchid3", "white", "mediumorchid4", "white", "mediumorchid3", "white"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("darkorchid4", "gold3", "darkorchid3", "gold2", "mediumorchid4", "gold", "mediumorchid3", "gold1"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(mediaSubset, aes(x=Media, y=value, fill=Media)) +
geom_boxplot()
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables, color = cyl)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("darkorchid4", "gold3", "darkorchid3", "gold2", "mediumorchid4", "gold", "mediumorchid3", "gold1"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables, color=default)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("darkorchid4", "gold3", "darkorchid3", "gold2", "mediumorchid4", "gold", "mediumorchid3", "gold1"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("darkorchid4", "gold3", "darkorchid3", "gold2", "mediumorchid4", "gold", "mediumorchid3", "gold1"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("firebrick1", "deeppink4", "deepskyblue", "burlywood", "chartreuse", "aquamarine", "darkslateblue", "goldenrod"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(plyr)
library(Rmisc)
# load data
CFU1count <-  read.csv("StarvationColony_OneDay_07222015_WJB.csv", header = T)
CFU10count <- read.csv("StarvationColony_TenDay_07222015_WJB.csv", header = T)
CFU1dayRA <- read.csv("StarvationColony_OneDay_07232015_WJB.csv", header = T)
CFU10dayRA <- read.csv("StarvationColony_TenDay_07232015_WJB.csv", header = T)
Viol1day <- read.csv("StarvationViolacein_OneDay_07212015_WJB.csv", header = T)
Viol10day <- read.csv("StarvationViolacein_TenDay_07212015_WJB.csv", header = T)
# Sum the purple and white CFU counts for 1 and 10 day lines
CFU1count$Total <- as.numeric(CFU1count$Purple) + as.numeric(CFU1count$White)
CFU10count$Total <- as.numeric(CFU10count$Purple) + as.numeric(CFU10count$White)
# These data sets are pretty much the same, 10 day and 1 day lines are just different treatments
# So we can just add a column designating whether a row is from a 1 or 10 day line, and merge them
CFU1count$Transfer <- rep(1,nrow(CFU1count))
CFU10count$Transfer <- rep(10,nrow(CFU10count))
# Now merge on the columns "Treatment"
CFUcountMerge <- rbind(CFU1count, CFU10count)
CFUcountMergesubset <- subset(CFUcountMerge, select = -c(Purple,White) )
CFUcountMergesubset$Variables <- do.call(paste, c(CFUcountMergesubset[c("Name", "Transfer")], sep = ""))
# Let's also do a log-transform
CFUcountMergesubset$Total <- log(CFUcountMergesubset$Total, 10)
# Now let's do the same thing for everything else
CFU1dayRA$Transfer <- rep(1,nrow(CFU1dayRA))
CFU10dayRA$Transfer <- rep(10,nrow(CFU10dayRA))
CFURAmerge <- rbind(CFU1dayRA, CFU10dayRA)
CFURAmerge$Variables <- do.call(paste, c(CFURAmerge[c("Name", "Transfer")], sep = ""))
# We need to first reshape the violacein datasets before we can merge them
Viol1melt <- melt(Viol1day, id.vars = "Day")
Viol10melt <- melt(Viol10day, id.vars = "Day")
Viol1melt$Transfer <- rep(1,nrow(Viol1melt))
Viol10melt$Transfer <- rep(10,nrow(Viol10melt))
ViolMerge <- rbind(Viol1melt, Viol10melt)
ViolMerge$Variables <- do.call(paste, c(ViolMerge[c("variable", "Transfer")], sep = ""))
# Mean and standard error
CFUcountSE <- summarySE(CFUcountMergesubset, measurevar="Total", groupvars=c("Day", "Variables"),
conf.interval = 0.95, .drop = TRUE)
CFUraSE <- summarySE(CFURAmerge, measurevar="Ratio", groupvars=c("Day", "Variables"),
conf.interval = 0.95, .drop = TRUE)
# Now get the mean and standard error fot violacein extraction
# for each phenotype
ViolSE <- summarySE(ViolMerge, measurevar="value", groupvars=c("Day", "Variables"),
conf.interval = 0.95, .drop = TRUE)
# Now let's plot violacein concentration and CFU counts through time
# First up, plot CFU concentration
ggplot(CFUcountSE, aes(x=Day, y=Total, colour=Variables)) +
geom_errorbar(aes(ymin=Total-se, ymax=Total+se), width=.1) +
geom_line() +
geom_point()
# Now the relative abundance
ggplot(CFUraSE, aes(x=Day, y=Ratio, colour=Variables)) +
geom_errorbar(aes(ymin=Ratio-se, ymax=Ratio+se), width=.1) +
geom_line() +
geom_point()
# Violacein concentration
ggplot(ViolSE, aes(x=Day, y=value, colour=Variables)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point()
library(RColorBrewer)
display.brewer.all()
ggplot(CFUcountSE, aes(x=Day, y=Total, colour=Variables)) +
geom_errorbar(aes(ymin=Total-se, ymax=Total+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("CFUs/mL")
ggplot(CFUraSE, aes(x=Day, y=Ratio, colour=Variables)) +
geom_errorbar(aes(ymin=Ratio-se, ymax=Ratio+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("Ratio (CFU Purple:White)")
ggplot(ViolSE, aes(x=Day, y=value, colour=Variables)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("Violacein Units")
ggplot(media, aes(x=Variables, y=Violacein, fill=Variables)) + geom_boxplot() + geom_blank() + ylab("Violacein Units") + scale_fill_manual(values = c("firebrick1", "deeppink4", "deepskyblue", "burlywood", "chartreuse", "aquamarine", "darkslateblue", "goldenrod"), drop = FALSE, name="Variables", labels=c("Purple in LB", "White in LB", "Purple in LB with Tryptophan", "White in LB with Tryptophan", "Purple in LB with Glycerol", "White in LB with Glycerol", "Purple with LB with Both", "Purple in LB with Both"))
ggplot(meltepiLog, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Treatment") + ylab("Violacein Units") + scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("Azacytidine", "Control"))
ggplot(qs.melt, aes(x=variable, y=value, fill=variable)) + geom_boxplot() + xlab("Experimental Groups") + ylab("Violacein Units")+ scale_fill_manual(values=c("darkorchid4", "white"), name="Treatment", labels=c("White without Supernatant", "White with Supernatant"))  + geom_blank()
ggplot(meltRA, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_blank() + xlab("Testing Time") + ylab("Relative Abundance (CFU Purple:White)") + scale_fill_manual(values=c("forestgreen", "royalblue"), name="Sampling Time", labels=c("Before", "After"))
ggplot(ViolMelt, aes(x=Variables, y=value, fill=variable)) +
geom_boxplot() + xlab("Variables") + ylab("Violacein Units") + scale_fill_manual(values=c("darkorchid4", "white"), name="Starting Phenotype", labels=c("Purple", "White"))
ggplot(CFUraSE, aes(x=Day, y=Ratio, colour=Variables)) +
geom_errorbar(aes(ymin=Ratio-se, ymax=Ratio+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("Ratio (CFU Purple:White)")
ggplot(ViolSE, aes(x=Day, y=value, colour=Variables)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point() + xlab("Day") + ylab("Violacein Units")
