pred <- read.csv("./Predation_07212015_WJB.csv", header = T)
setwd("~/Documents/Dropbox/GitHub/JanthinoViol/data")
pred <- read.csv("./Predation_07212015_WJB.csv", header = T)
pred <- read.csv("./Predation_07212015_WJB.csv", header = T)
PTT <- read.csv("./PTTPredation_07222015_WJB.csv", header = T)
WTT <- read.csv("./WTTPredation_07222015_WJB.csv", header = T)
PW <- read.csv("./PWPredation_07222015_WJB.csv", header = T)
pred <- read.csv("./Predation_07222015_WJB.csv", header = T)
ppred.aov <- aov(PPTT~PWP*PWW, data=pred)
summary(ppred.aov)
ppred.aov <- aov(PPTT*WPTT~PWP*PWW, data=pred)
summary(ppred.aov)
wpred.aov <- aov(PWTT*WWTT~PWP*PWW, data=pred)
summary(wpred.aov)
media <- read.csv("./MediaViolacein_07222015_WJB.csv", header = T)
View(media)
View(media)
media <- read.csv("./MediaViolacein_07212015_WJB.csv", header = T)
View(media)
View(media)
qs <- read.csv("./QSViolacein_07212015_WJB.csv", header = T)
attach(qs)
qs.aov <- aov(WNP~WOP, data=qs)
summary(qs.aov)
qs.means <- c(mean(qs$WNP, na.rm=T), mean(qs$WOP, na.rm=T))
qs.std <- c(sd(qs$WNP, na.rm=T), sd(qs$WOP, na.rm=T))
qs.n <- c(sum(qs$WNP, na.rm=T)/mean(qs$WOP, na.rm=T), sum(qs$WOP, na.rm=T)/mean(qs$WNP, na.rm=T))
qs.se <- c(qs.std/sqrt(abs(qs.n)))
qs.bar <- barplot(qs.means, names = c("WNP", "WOP"), xlab="Treatment", ylab="Violacein Units", ylim=c(-1, 2), col=c("steelblue1", "firebrick1"))
abline(h=0)
segments(qs.bar, qs.means+qs.se, qs.bar, qs.means-qs.se)
# Applies vertical marks for standard error
segments(qs.bar -0.05, qs.means+qs.se, qs.bar +0.05, qs.means+qs.se)
# Makes horizontal tick on positive SE
# Numbers determine the width of the ticks
segments(qs.bar -0.05, qs.means-qs.se, qs.bar +0.05, qs.means-qs.se)
comp <- read.csv("./Competition_07212015_WJB.csv", header = T)
attach(comp)
comp.aov <- aov(PB*WB~PA*WA)
summary(comp.aov)
means <- c(mean(comp$PB, na.rm=T), mean(comp$PA, na.rm=T), mean(comp$WB, na.rm=T), mean(comp$WA, na.rm=T))
comp.std <- c(sd(comp$PB, na.rm=T), sd(comp$PA, na.rm=T), sd(comp$WB, na.rm=T), sd(comp$WA, na.rm=T))
comp.n <- c(sum(comp$PB, na.rm=T)/mean(comp$PA, na.rm=T), sum(comp$PB, na.rm=T)/mean(comp$PA, na.rm=T), sum(comp$WB, na.rm=T)/mean(comp$WA, na.rm=T), sum(comp$WB, na.rm=T)/mean(comp$WA, na.rm=T))
comp.se <- c(comp.std/sqrt(comp.n))
comp.bar <- barplot(means, log="y", names = c("PB", "PA", "WB", "WA"), xlab="Strain", ylab="CFU/mL", ylim=c(1e+9, 6e+9), col=c("steelblue1", "firebrick1"), beside=TRUE)
abline(h=0)
segments(comp.bar, means+comp.se, comp.bar, means-comp.se)
# Applies vertical marks for standard error
segments(comp.bar -0.05, means+comp.se, comp.bar +0.05, means+comp.se)
# Makes horizontal tick on positive SE
# Numbers determine the width of the ticks
segments(comp.bar -0.05, means-comp.se, comp.bar +0.05, means-comp.se)
# Latent issues include colors (easily corrected) and grouping them properly (not sure about this one).
tencol <- read.csv("StarvationColony_TenDay_07222015_WJB.csv", header = T)
onecol <- read.csv("StarvationColony_OneDay_07222015_WJB.csv", header = T)
plot(tencol$Day, tencol$Purple, col='purple')
points(tencol$Day, tencol$White, col='black')
abline(lm(Day~Purple, data=tencol, col='purple'))
abline(lm(Day~White, data=tencol, col='black'))
# Run a regression and look for differences, one at a time.
tencolP.reg <- lm(Day~Purple, data=tencol)
summary(tencolP.reg)
# Significance!
tencolW.reg <- lm(Day~White, data=tencol)
summary(tencolW.reg)
# More significance!
plot(onecol$Day, onecol$Purple, col='purple')
points(onecol$Day, onecol$White, col='black')
abline(lm(Day~Purple, data=onecol, col='purple'))
abline(lm(Day~White, data=onecol, col='black'))
onecolP.reg <- lm(Day~Purple, data=onecol)
summary(onecolP.reg)
# Not signficant.
onecolW.reg <- lm(Day~White, data=onecol)
summary(onecolW.reg)
# Significant.
abline(lm(Day~Purple, data=onecol, col='purple'))
abline(lm(Day~White, data=onecol, col='black'))
plot(onecol$Day, onecol$Purple, col='purple')
points(onecol$Day, onecol$White, col='black')
abline(lm(Day~Purple, data=onecol, col='purple'))
abline(lm(Day~White, data=onecol, col='black'))
View(tencol)
View(tencol)
plot(tencol$Day, tencol$Purple, col='purple')
points(tencol$Day, tencol$White, col='black')
abline(lm(Day~Purple, data=tencol, col='purple'))
abline(lm(Day~White, data=tencol, col='black'))
tenvio <- read.csv("./StarvationViolacein_TenDay_07212015_WJB.csv", header = T)
onevio <- read.csv("./StarvationViolacein_OneDay_07212015_WJB.csv", header = T)
# This will plot the relevant points.
plot(tenvio$Day, tenvio$P, col='purple')
points(tenvio$Day, tenvio$W, col='black')
abline(lm(Day~P, data=tenvio, col='purple'))
abline(lm(Day~W, data=tenvio, col='black'))
